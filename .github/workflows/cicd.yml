# Automatically tests, builds and deploys the user-service Node.js microservice to Kubernetes on push to the main branch. 
name: Deploy user-service microservices

on:

  # Deploys the microservice on push
  push:
    branches:
      - master
      - tests
  
  # Allows workflow to be invoked manually through the GitHub Actions user interface.
  workflow_dispatch:

jobs:
  user-service:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: 'backend' # Sets default path for "run" commands.
    
    # Sets environment variables with values extracted from GitHub Actions Repository Secrets.
    env:
      CONTAINER_REGISTRY_LOGIN_SERVER: ${{ secrets.CONTAINER_REGISTRY_LOGIN_SERVER }}
      CONTAINER_REGISTRY_USERNAME: ${{ secrets.CONTAINER_REGISTRY_USERNAME }}
      CONTAINER_REGISTRY_PASSWORD: ${{ secrets.CONTAINER_REGISTRY_PASSWORD }}

    steps:

      # Checks-out repository under $GITHUB_WORKSPACE.
      - uses: actions/checkout@v4

      # Installs Node.js.
      - uses: actions/setup-node@v4
        with:
          node-version: 19.9.0
          cache: 'npm'
          cache-dependency-path: './package-lock.json' # Path to package-lock.json.
      
      # Installs NPM packages and tests the microservice.
      - name: Test
        run: |
          npm install
          npm test
      - name: Login to Azure CR 
        uses: azure/docker-login@v1
        with: 
          login-server: hotel404.azurecr.io 
          username: ${{ secrets.CONTAINER_REGISTRY_USERNAME }}
          password: ${{ secrets.CONTAINER_REGISTRY_PASSWORD }}
      # Builds the Docker image and published it.
      - name: Build and publish to Azure CR
        run: |
          docker build -t hotel404.azurecr.io/user-service:latest --file ./docker/Users/Dockerfile .
          docker push hotel404.azurecr.io/user-service:latest

      # Installs Kubectl and connects it to the Azure Kubernetes Service (AKS) cluster.
      # https://github.com/marketplace/actions/kubernetes-cli-kubectl
      - uses: tale/kubectl-action@v1
        with:
          base64-kube-config: ${{ secrets.KUBE_CONFIG }}
          kubectl-version: v1.24.2
      
      # Expands the manifest YAML file (i.e. replaces placeholders in the YAML file with environment variable values)
      # and deploys the microservice to the Azure Kubernetes Service (AKS) cluster.
      - name: Deploy
        run: envsubst < manifests/deployment.yaml | kubectl apply -f -
